# Nagios Service Definitions.
#
# Automatically generated by Chef.

<% escalation_services = {} %>

define service {
    use                 default-service
    host_name           *
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}


# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      monitoring
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}



# Uncomment if you're using Munin
#define service {
#    service_description Munin Client
#    hostgroup_name      all
#    check_command       check_tcp!4949
#    use                 default-service
#}

# default checks for all hosts
# Uncomment if you're running chef-client as a daemon
define service {
    service_description Chef Client
    hostgroup_name      chef_client
    check_command    	check_chef_client
    use                 default-service
}



define service {
    service_description Free Space All Disks
    hostgroup_name      infochimps_base
    check_command    	check_all_disks
    use                 default-service
}


define service {
    service_description Load Average
    hostgroup_name      infochimps_base
    check_command			  check_load
    use                 default-service
}


define service {
    service_description Free Memory
    hostgroup_name      infochimps_base
    check_command    	check_mem
    use                 default-service
}


define service {
    service_description SSH
    hostgroup_name      infochimps_base
    check_command       check_ssh
    use                 default-service
}



define service {
    service_description Processes
    hostgroup_name      infochimps_base
    check_command       check_local_procs
    use                 default-service
}



<% unless @service_hosts['monitoring'].nil? -%>
# If the monitoring host is a postfix relay, uncomment this.
#define service {
#    service_description Postfix
#    hostgroup_name      monitoring
#    check_command       check_nrpe!check_smtp
#    use                 default-service
#}

# If the monitoring host is a syslog server, uncomment this.
#define service {
#    service_description Rsyslog
#    hostgroup_name      monitoring
#    check_command       check_tcp!514
#    use                 default-service
#}

<% end -%>
<% unless @service_hosts['webserver'].nil? -%>
# basic web server http check
define service {
    service_description HTTP Processes
    hostgroup_name      webserver
    check_command       check_http
    use                 default-service
}

<% end -%>
<% unless @service_hosts['appserver'].nil? -%>
# basic check if appserver role is running unicorn
define service {
    service_description Unicorn Processes
    hostgroup_name      appserver
    check_command       check_nrpe!check_unicorn
    use                 default-service
}

define service {
    service_description Unicorn HTTP
    hostgroup_name      appserver
    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
    use                 default-service
}

<% end -%>
<% unless @service_hosts['database_master'].nil? -%>
# basic check if the database_master role is a mysql server
# database_master service checks
define service {
       service_description MySQL
       hostgroup_name     database_master
       check_command	   check_nrpe!check_mysql_server
       use		   default-service
}
<% end -%>

<% unless @service_hosts['elasticsearch_data_esnode'].nil? %>
define service {
       service_description elastic_search_process
       hostgroup_name	   elasticsearch_data_esnode
       check_command       check_es_proc
       use		   default-service
}

define service {
       service_description elastic_search_node
       hostgroup_name	   elasticsearch_data_esnode
       check_command       check_es_node
       use		   default-service
}

define service {
       service_description elastic_search_cluster
       hostgroup_name	   elasticsearch_data_esnode
       check_command       check_es_cluster
       use		   default-service
}


<% end %>


define service {
       service_description zookeeper
       host_name	   ham-alpha,ham-beta,ham-gamma-0,ham-gamma-1,ham-gamma-2
       check_command       check_zookeeper_procs
       use		   default-service
}

define service {
       service_description hadoop-namenode-proc
       host_name	   ham-alpha
       check_command       check_hadoop_namenode_proc
       use		   default-service
}

#define service {
#       service_description hadoop-secondarynn-proc
#       host_name	   ham-alpha,ham-beta
#       check_command       check_hadoop_secondarynn_proc
#       use		   default-service
#}

define service {
       service_description hadoop-tasktracker-proc
       host_name	   ham-gamma-0,ham-gamma-1,ham-gamma-2,ham-delta-0,ham-delta-1,ham-delta-2,ham-delta-3,ham-delta-4,ham-delta-5,ham-delta-6,ham-delta-7,ham-delta-8,ham-delta-9,ham-delta-10
       check_command       check_hadoop_tasktracker_proc
       use		   default-service
}

define service {
       service_description hadoop-jobtracker-proc
       host_name	   ham-alpha
       check_command       check_hadoop_jobtracker_proc
       use		   default-service
}

#define service {
#       service_description hadoop-datanode-proc
#       hostgroup_name	   ham_cluster
#       check_command       check_hadoop_datanode_proc
#       use		   default-service
#}

#define service {
#       service_description hbase-master-proc
#       host_name	   ham-alpha,ham-beta
#       check_command       check_hbase_master_proc
#       use		   default-service
#}

define service {
       service_description hbase-regionserver-proc
       host_name	   ham-gamma-0,ham-gamma-1,ham-gamma-2,ham-delta-0,ham-delta-1,ham-delta-2,ham-delta-3,ham-delta-4,ham-delta-5,ham-delta-6,ham-delta-7,ham-delta-8,ham-delta-9,ham-delta-10
       check_command       check_hbase_regionserver_proc
       use		   default-service
}

define service {
       service_description hbase-rest-proc
       host_name	   ham-alpha
       check_command       check_hbase_rest_proc
       use		   default-service
}


define service {
       service_description hadoop-namenode-status
       host_name	   ham-alpha
       check_command       check_hadoop_namenode_status
       use		   default-service
}

#define service {
#       service_description hadoop-secondarynn-status
#       host_name	   ham-alpha,ham-beta
#       check_command       check_hadoop_secondarynn_status
#       use		   default-service
#}

define service {
       service_description hadoop-tasktracker-status
       host_name	   ham-gamma-0,ham-gamma-1,ham-gamma-2,ham-delta-0,ham-delta-1,ham-delta-2,ham-delta-3,ham-delta-4,ham-delta-5,ham-delta-6,ham-delta-7,ham-delta-8,ham-delta-9,ham-delta-10
       check_command       check_hadoop_tasktracker_status
       use		   default-service
}

define service {
       service_description hadoop-jobtracker-status
       host_name	   ham-alpha
       check_command       check_hadoop_jobtracker_status
       use		   default-service
}

#define service {
#       service_description hadoop-datanode-status
#       hostgroup_name	   ham_cluster
#       check_command       check_hadoop_datanode_status
#       use		   default-service
#}

define service {
       service_description hbase-master-status
       host_name	   ham-alpha,ham-beta
       check_command       check_hbase_master_status
       use		   default-service
}









