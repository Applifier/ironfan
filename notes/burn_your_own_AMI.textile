h2. Burn an AMI 

<pre><code>
# Shutdown services  and make the following ones not restart on bootup
for foo in god apeyeye nginx hadoop-0.20-{namenode,jobtracker,tasktracker,datanode,secondarynamenode} cassandra couchdb thttpd chef-client nfs-kernel-server rabbitmq-server chef-{solr,solr-indexer,client,server,server-webui} elasticsearch ; do sudo service $foo stop ; done
killall redis-server tail nginx console-kil-daemon
for foo in hadoop-0.20-{tasktracker,datanode,namenode,jobtracker,secondarynamenode} cassandra elasticsearch ; do sudo update-rc.d -f $foo remove ; done
# Give the process list a how's your father -- nothing interesting should be running.
ps auxf
# Unmount anything that's mounted,
sudo umount /home
sudo umount /ebs*
# Detatch anything that's attached,
ec2-describe-volumes -K pk.pem -C cert.pem | grep 3045e85a
ec2-detach-volume    -K pk.pem -C cert.pem vol-123545
# and check that it all worked.
mount
ec2-describe-volumes -K pk.pem -C cert.pem | grep 3045e85a

# Fix:
#  /etc/hosts
#  /etc/hostname
#  /etc/fstab

# Give apt some last-minute lovin'
sudo apt-get -y update  ;
sudo apt-get -y upgrade ;
sudo apt-get -f install ;
sudo apt-get clean ;
sudo updatedb ;

# blow away anything git-deployed
sudo rm -rf /var/www/{apeyeye,apidocs} /etc/{apeyeye,god,monitoring,redis} /var/run/god /var/log/god /etc/sv/apeyeye

# Nuke files that would be inconvenient to persist: chef config and startup files; log files; and files that contain keys of some sort.
away_dir=/mnt/tmp/away-`date "+%Y%m%d%H"`
sudo mkdir -p $away_dir
# Move files out of the way that will confuse on reboot
sudo mv /var/lib/couchdb/0.10.0/chef.couch /var/lib/rabbitmq/mnesia/rabbit /etc/hostname /etc/chef/{client-config.json,chef-config.json,*.pem} /var/www/index.html $away_dir
sudo mv /srv/chef/cache/chef_server_cookie_id /var/chef /etc/hadoop/conf/{*.xml,raw_settings.yaml*} /etc/cassandra/storage-conf* /etc/elasticsearch/* $away_dir
sudo mkdir -p $away_dir/chef_cache; sudo mv /var/cache/chef/* $away_dir/chef_cache/
# flush files that might have history or credentials
sudo rm -rf /root/{.cache,.chef,emacs.d,.bash_history,.gem} ~ubuntu/{.cache,.chef,emacs.d,.bash_history,.gem} /var/backups/*
# Zero out log files
sudo rm -rf /var/lib/cloud/data/* /var/log/{chef,hadoop,rabbitmq,cassandra}/* /etc/sv/*/log/main/* /var/log/*.gz
sudo bash -c 'for foo in /var/log/{dmesg,syslog,messages,debug,udev,lastlog,faillog,dmesg.0,*.log} ; do echo -n > $foo ; done'
# Nuke old chef templates
sudo find /var /etc -iname '*.chef-2*[0-9]' -exec rm {} \; -print

# If you want to record the AMI version, something like
sudo rm /etc/motd ;
sudo bash -c 'echo "CHIMP CHIMP CHIMP CRUNCH CRUNCH CRUNCH (image burned at `date`)" > /etc/motd ' ;
</code></pre>

h3. Burning an EBS-backed AMI

Just use the console. MAKE SURE TO STOP, UNMOUNT AND DETACH ALL EBS volumes first.

  infochimps.chef-client.lucid.east.ebs-32bit-20100725
  infochimps.scraper-client.lucid.east.ebs-32bit-20100725
  Chef client: use with http://github.com/infochimps/cluster_chef - Hadoop Cassandra & NFS under Chef

h3. Burning an Instance-backed (s3) AMIs

From your local machine, bring over your credentials

<pre><code>
  scp -i ~/.hadoop-ec2/keypairs/zaius.pem ~/.hadoop-ec2/{certs/cert.pem,certs/pk.pem,keypairs/zaius.pem} ubuntu@ec2-204-236-189-83.us-west-1.compute.amazonaws.com:/tmp
</code></pre>

On the target machine:

<pre><code>
cd /mnt
# credentials
AWS_ACCOUNT_ID=123456781234 AWS_ACCESS_KEY_ID=2341245 AWS_SECRET_ACCESS_KEY=125324635473465743674637
# ... move the keys to /mnt (so that they are ignored in the bundling)
sudo mv /tmp/*.pem /mnt
</code></pre>
  
Modify the following to suit. (A note about AMI_EXCLUDES: the ec2-bundle-vol
will complain about excluded dirs that don't exist -- remove those. Be careful
though, because it is a VERY BAD THING if directories that do exist (say, a
500GB attached drive) aren't excluded!)

<pre><code>
BITS=64bit
AMI_BUCKET=s3amis.infinitemonkeys.info
# might need to add: /ebs1,/ebs2,/data,/var/lib/cassandra,/srv/chef/cache
AMI_EXCLUDES=/mnt,/mnt2,/root/.ssh/authorized_keys,/home/ubuntu/.ssh/authorized_keys

export EC2_CERT=/mnt/cert.pem
export EC2_PRIVATE_KEY=/mnt/pk.pem
ami_name=infochimps.chef-client.lucid.east.ami-${BITS}-`date "+%Y%m%d"`
ami_bucket=${AMI_BUCKET}/$ami_name
sudo mkdir -p /mnt/$ami_bucket

# This will take a long fucking time. 15 minutes on a small instance. It fucking sucks.
time sudo ec2-bundle-vol --exclude=$AMI_EXCLUDES -d /mnt/$ami_bucket -u $AWS_ACCOUNT_ID --cert cert.pem --privatekey pk.pem --ec2cert /etc/ec2/amitools/cert-ec2.pem
time ec2-upload-bundle    -b $ami_bucket -m /mnt/$ami_bucket/image.manifest.xml -a $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY
time ec2-register -n $ami_name -d $ami_name $ami_bucket/image.manifest.xml
</code></pre>

time ec2-register -n infochimps.chef-client.32bit.20100608 -d 'Chef client image: use with http://github.com/infochimps/cluster_chef - Hadoop Cassandra & NFS under Chef' $ami_bucket/image.manifest.xml

h4. If you are in a region other than us-east-1

# export AWS_REGION=us-west-1 
# export EC2_URL=https://${AWS_REGION}.ec2.amazonaws.com
# sudo mkdir -p /mnt/$ami_bucket
# time sudo ec2-bundle-vol --exclude=$AMI_EXCLUDES -d /mnt/$ami_bucket -u $AWS_ACCOUNT_ID --cert cert.pem --privatekey pk.pem --ec2cert /etc/ec2/amitools/cert-ec2.pem
# time ec2-migrate-manifest      --manifest /mnt/$ami_bucket/image.manifest.xml   --region   $AWS_REGION -a $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY 
# time ec2-upload-bundle    -b $ami_bucket -m /mnt/$ami_bucket/image.manifest.xml --location $AWS_REGION -a $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY
# time ec2-register -n $ami_name -d $ami_name $ami_bucket/image.manifest.xml      --region $AWS_REGION





h2. Bootstrap chef server

( cd ~/ics/sysadmin/cluster_chef/ ; knife cookbook upload --all ; for foo in ~/ics/sysadmin/cluster_chef/roles/* ; do echo $foo ; knife role from file $foo ; done ; rake load_data_bags ; rake load_data_bags ) 

sudo apt-get install jardiff emacs23-nox erlang-mode python-mode ruby-elisp ruby1.8-elisp org-mode mmm-mode css-mode html-helper-mode lua-mode ruby1.8 ruby1.8-dev rdoc1.8 ri1.8 libopenssl-ruby

sudo gem install --no-ri --no-rdoc extlib oniguruma fastercsv json yajl-ruby libxml-ruby  htmlentities addressable uuidtools configliere right_aws whenever rest-client oauth nokogiri crack cheat echoe jeweler yard net-proto net-scp net-sftp net-ssh idn rails wirble wukong cassandra redis dependencies wukong poolparty amazon-ec2 broham
